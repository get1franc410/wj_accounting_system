# Generated by Django 5.2.5 on 2025-09-07 14:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_emailconfiguration'),
        ('inventory', '0003_remove_inventoryitem_purchase_price_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='inventoryitem',
            name='allow_fractional_quantities',
            field=models.BooleanField(default=True, help_text='Allow decimal quantities (uncheck for whole numbers only like cars, uniforms, etc.)'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='enable_batch_tracking',
            field=models.BooleanField(default=False, help_text='Enable batch/lot tracking for this item. Automatically sets costing method to Specific Identification.'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='track_expiry',
            field=models.BooleanField(default=False, help_text='Track expiry dates for this item (useful for perishable goods)'),
        ),
        migrations.AlterField(
            model_name='inventoryitem',
            name='costing_method',
            field=models.CharField(choices=[('FIFO', 'First In, First Out'), ('LIFO', 'Last In, First Out'), ('WEIGHTED_AVG', 'Weighted Average'), ('SPECIFIC_ID', 'Specific Identification (Batch Tracking)')], default='WEIGHTED_AVG', help_text="Method used to calculate cost of goods sold. Use 'Specific Identification' for batch tracking.", max_length=15),
        ),
        migrations.AlterField(
            model_name='inventoryitem',
            name='unit_of_measurement',
            field=models.CharField(choices=[('Nos', 'Nos (Numbers)'), ('pcs', 'Pieces'), ('set', 'Set'), ('box', 'Box'), ('roll', 'Roll'), ('bag', 'Bag'), ('kg', 'Kilogram'), ('g', 'Gram'), ('ton', 'Tonne'), ('litre', 'Litre'), ('ml', 'Millilitre'), ('m3', 'Cubic Meter'), ('sqm', 'Square Meter'), ('m', 'Meter'), ('per_hour', 'Per Hour'), ('per_day', 'Per Day'), ('charges', 'Charges'), ('per_job', 'Per Job')], default='Nos', help_text='Unit of measurement for this item', max_length=15),
        ),
        migrations.CreateModel(
            name='InventoryBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(help_text='Unique batch/lot number', max_length=50)),
                ('manufacture_date', models.DateField(blank=True, help_text='Date when this batch was manufactured', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Expiry date for this batch (if applicable)', null=True)),
                ('supplier', models.CharField(blank=True, help_text='Supplier/manufacturer of this batch', max_length=100)),
                ('quantity_remaining', models.DecimalField(decimal_places=2, help_text='Quantity remaining in this batch', max_digits=12)),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Cost per unit for this batch', max_digits=12)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this batch')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Inventory Batch',
                'verbose_name_plural': 'Inventory Batches',
                'ordering': ['expiry_date', 'manufacture_date', 'batch_number'],
                'unique_together': {('item', 'batch_number')},
            },
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='batch',
            field=models.ForeignKey(blank=True, help_text='Specific batch for this transaction (if batch tracking enabled)', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorybatch'),
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out')], max_length=3)),
                ('reason', models.CharField(choices=[('DAMAGED', 'Item Damaged'), ('EXPIRED', 'Item Expired'), ('GIFT', 'Gift/Promotional'), ('CORRECTION', 'Quantity Correction'), ('THEFT', 'Theft/Loss'), ('RETURN', 'Customer Return'), ('TRANSFER', 'Transfer Between Locations'), ('CUSTOM', 'Other (Custom Reason)')], max_length=20)),
                ('custom_reason', models.CharField(blank=True, help_text="Custom reason if 'Other' is selected", max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity to move (always positive)', max_digits=12)),
                ('reference_document', models.CharField(blank=True, help_text='Reference document number', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False, editable=False)),
                ('processed_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('batch', models.ForeignKey(blank=True, help_text='Specific batch for this movement (if batch tracking enabled)', null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorybatch')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_movements', to='core.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_movements_created', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem')),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_create_movement', 'Can create inventory movements')],
            },
        ),
    ]
